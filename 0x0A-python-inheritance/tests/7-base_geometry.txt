The ``7-base_geometry`` module and task 7
======================

Using ``methods`` of BaseGeometry
-------------------

Importing the function from the module:
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Creating instance:
	>>> bg = BaseGeometry()

Call area:
	>>> bg.area()
	Traceback (most recent call last):
	...
	Exception: area() is not implemented

Integer validate with type integer:
	>>> bg.integer_validator('age', 17)

Integer validate with type string:
	>>> bg.integer_validator('age', '17')
	Traceback (most recent call last):
	...
	TypeError: age must be an integer

Integer validate with type string:
	>>> bg.integer_validator('name', 'Holberton')
	Traceback (most recent call last):
	...
	TypeError: name must be an integer

Integer validate with type bool:
	>>> bg.integer_validator('name', True)
	Traceback (most recent call last):
	...
	TypeError: name must be an integer

Integer validate with type float:
	>>> bg.integer_validator('name', 12.5)
	Traceback (most recent call last):
	...
	TypeError: name must be an integer

Integer validate with inf:
	>>> bg.integer_validator('name', float('inf'))
	Traceback (most recent call last):
	...
	TypeError: name must be an integer

Integer validate with negative numbers:
	>>> bg.integer_validator('age', -4)
	Traceback (most recent call last):
	...
	ValueError: age must be greater than 0

Integer validate with value 0:
	>>> bg.integer_validator('age', 0)
	Traceback (most recent call last):
	...
	ValueError: age must be greater than 0

Area with a parameter:
	>>> bg.area(12)
	Traceback (most recent call last):
	...
	TypeError: area() takes 1 positional argument but 2 were given
