add_integer.txt

===============================
 How to Use add_integer.py
===============================

This library is very simple, since it only has one function called
``add_integer()``.

Numbers
=======

::

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(1, 2)
    3

    >>> add_integer(100, -2)
    98

    >>> add_integer(2)
    100

::
works with floating-point value

    >>> add_integer(100.3, -2)
    98

    >>> add_integer(1, 3.5)
    4

::
Works whit one argument.

    >>> add_integer(98, None)
    Traceback (most recent call last):
              ...
    TypeError: b must be an integer

    >>> add_integer(None, 98)
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

::
Works whit a string

    >>> add_integer('98', 5)
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

Works if not have arguments

    add_integer()
    Traceback (most recent call last):
      ...
    add_integer() missing 1 required positional argument: 'a'

    >>> add_integer(--2++)
    Traceback (most recent call last):
      ...
    SyntaxError: invalid syntax

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
          ...
    OverflowError: cannot convert float infinity to integer

    >>> try:
    ...     print(add_integer(4, "School"))
    ... except Exception as e:
    ...     print(e)
    b must be an integer


    >>> try:
    ...     print(add_integer(None))
    ... except Exception as e:
    ...     print(e)
    a must be an integer

    >>> add_integer(2, [2, 3])
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer('hi', 9)
    Traceback (most recent call last):
    TypeError: a must be an integer
