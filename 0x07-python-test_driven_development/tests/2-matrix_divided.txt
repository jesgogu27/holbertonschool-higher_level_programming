>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    
>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> print(matrix_divided([[1, 2, 3]], 0))
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> print(matrix_divided([[1, 2, 3], [4, 5, 6, 9]], 3))
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> print(matrix_divided([[1, 2, 3]], 3))
Traceback (most recent call last):
...
IndexError: list index out of range

>>> print(matrix_divided([[1, 2, 3], [4, 5, z]], 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> print(matrix_divided("ok", 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], "ok"))
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix_divided([[6, "12"], [18, 6]], 3)
Traceback (most recent call last):
TypeError:  matrix must be a matrix (array of arrays of integers/floats)